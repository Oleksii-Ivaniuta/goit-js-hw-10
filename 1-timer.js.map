{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["const head = document.querySelector(\"head\");\nconst monseratFontLinks = `<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin><link href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap\" rel=\"stylesheet\"></link>;`\nhead.insertAdjacentHTML(\"beforeEnd\", monseratFontLinks);\n\nimport flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nlet userSelectedDate = null;\nconst dateInput = document.querySelector(\"#datetime-picker\");\ndateInput.classList.add(\"timer-input\")\nconst buttonStart = document.querySelector(\"button[data-start]\");\nbuttonStart.classList.add(\"button-start\");\nconst days = document.querySelector(\"[data-days]\");\nconst hours = document.querySelector(\"[data-hours]\");\nconst minutes = document.querySelector(\"[data-minutes]\");\nconst seconds = document.querySelector(\"[data-seconds]\");\nbuttonStart.disabled = true;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      if (selectedDates[0].getTime() <= Date.now()) {\n    buttonStart.disabled = true;\n        iziToast.error({\n  message: \"Please choose a date in the future\",\n  position: \"topCenter\",\n  backgroundColor: \"#ef4040\",\n  titleColor: \"white\",\n  messageColor: \"white\",\n  iconUrl: \"https://img.icons8.com/ios-filled/50/ffffff/delete-sign.png\",\n  progressBarColor: \"#a94442\",\n  timeout: 10000,\n  close: true,\n  closeOnClick: true,\n  transitionIn: \"fadeIn\",\n  transitionOut: \"fadeOut\"\n});;\n        return;\n  }\n  else {\n    buttonStart.disabled = false;\n    iziToast.destroy();\n    return userSelectedDate = selectedDates[0].getTime();\n  }\n  },\n};\n\nbuttonStart.addEventListener(\"click\", startTimer);\nlet timerInt = null;\n\nfunction startTimer() {\n  if (userSelectedDate > Date.now()) {\n    buttonStart.disabled = true;\n    dateInput.disabled = true;\n    timerInt = setInterval(() => {\n      const timeRemainingUnix = userSelectedDate - Date.now();\n      if (timeRemainingUnix <= 0) {\n        clearInterval(timerInt);\n        dateInput.disabled = false;\n        return;\n      }\n      const timeRemaining = convertMs(timeRemainingUnix);\n      days.textContent = timeRemaining.days;\n      hours.textContent = timeRemaining.hours;\n      minutes.textContent = timeRemaining.minutes;\n      seconds.textContent = timeRemaining.seconds;\n    }\n      , 1000);\n  }\n  else {\n      clearInterval(timerInt);\n    dateInput.disabled = false;\n    days.textContent = \"00\";\nhours.textContent = \"00\";\nminutes.textContent = \"00\";\nseconds.textContent = \"00\";\n  return;\n  }\n};\n\nconst getDate = new flatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n// returning remaining time using function addLeadingZero to make XX format of value\n  return { days: addLeadingZero(days), hours: addLeadingZero(hours), minutes: addLeadingZero(minutes), seconds: addLeadingZero(seconds) };\n}\n\nfunction addLeadingZero(value) {\n  return value = String(value).padStart(2, \"0\");\n}"],"names":["head","monseratFontLinks","userSelectedDate","dateInput","buttonStart","days","hours","minutes","seconds","options","selectedDates","iziToast","startTimer","timerInt","timeRemainingUnix","timeRemaining","convertMs","flatpickr","ms","addLeadingZero","value"],"mappings":"0IAAA,MAAMA,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAoB,yQAC1BD,EAAK,mBAAmB,YAAaC,CAAiB,EAOtD,IAAIC,EAAmB,KACvB,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EAC3DA,EAAU,UAAU,IAAI,aAAa,EACrC,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EAC/DA,EAAY,UAAU,IAAI,cAAc,EACxC,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACvDJ,EAAY,SAAW,GAGvB,MAAMK,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,GAAIA,EAAc,CAAC,EAAE,QAAO,GAAM,KAAK,MAAO,CAChDN,EAAY,SAAW,GACnBO,EAAS,MAAM,CACrB,QAAS,qCACT,SAAU,YACV,gBAAiB,UACjB,WAAY,QACZ,aAAc,QACd,QAAS,8DACT,iBAAkB,UAClB,QAAS,IACT,MAAO,GACP,aAAc,GACd,aAAc,SACd,cAAe,SACjB,CAAC,EACO,MACR,KAEI,QAAAP,EAAY,SAAW,GACvBO,EAAS,QAAS,EACXT,EAAmBQ,EAAc,CAAC,EAAE,QAAS,CAErD,CACH,EAEAN,EAAY,iBAAiB,QAASQ,CAAU,EAChD,IAAIC,EAAW,KAEf,SAASD,GAAa,CACpB,GAAIV,EAAmB,KAAK,MAC1BE,EAAY,SAAW,GACvBD,EAAU,SAAW,GACrBU,EAAW,YAAY,IAAM,CAC3B,MAAMC,EAAoBZ,EAAmB,KAAK,IAAK,EACvD,GAAIY,GAAqB,EAAG,CAC1B,cAAcD,CAAQ,EACtBV,EAAU,SAAW,GACrB,MACR,CACM,MAAMY,EAAgBC,EAAUF,CAAiB,EACjDT,EAAK,YAAcU,EAAc,KACjCT,EAAM,YAAcS,EAAc,MAClCR,EAAQ,YAAcQ,EAAc,QACpCP,EAAQ,YAAcO,EAAc,OAC1C,EACQ,GAAI,MAEL,CACD,cAAcF,CAAQ,EACxBV,EAAU,SAAW,GACrBE,EAAK,YAAc,KACvBC,EAAM,YAAc,KACpBC,EAAQ,YAAc,KACtBC,EAAQ,YAAc,KACpB,MACF,CACA,CAEgB,IAAIS,EAAUd,EAAWM,CAAO,EAEhD,SAASO,EAAUE,EAAI,CAQrB,MAAMb,EAAO,KAAK,MAAMa,EAAK,KAAG,EAE1BZ,EAAQ,KAAK,MAAOY,EAAK,MAAO,IAAI,EAEpCX,EAAU,KAAK,MAAQW,EAAK,MAAO,KAAQ,GAAM,EAEjDV,EAAU,KAAK,MAASU,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAMC,EAAed,CAAI,EAAG,MAAOc,EAAeb,CAAK,EAAG,QAASa,EAAeZ,CAAO,EAAG,QAASY,EAAeX,CAAO,CAAG,CACzI,CAEA,SAASW,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CAC9C"}